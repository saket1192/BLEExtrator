name: Deploy to CocoaPods

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  
jobs:
  version:
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.get_version.outputs.version }}
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Get Version from Podspec
      id: get_version
      shell: bash
      run: |
        if [ ! -f "BLEExtractor.podspec" ]; then
          echo "Error: podspec file not found"
          exit 1
        fi
        VERSION=$(cat BLEExtractor.podspec | grep -m 1 "s.version.*=" | grep -o '".*"' | sed 's/"//g')
        if [ -z "$VERSION" ]; then
          echo "Error: Could not extract version"
          exit 1
        fi
        echo "Found version: $VERSION"
        echo "version=$VERSION" >> "$GITHUB_OUTPUT"
  
  lint:
    needs: version
    runs-on: macos-latest
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Install Cocoapods
      run: gem install cocoapods
      
    - name: Lint Podspec
      run: pod lib lint --allow-warnings
      
  test:
    needs: version
    runs-on: macos-latest
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Select Xcode
      run: sudo xcode-select -s /Applications/Xcode.app
      
    - name: Build and Test
      run: |
        swift test --enable-test-discovery
          
  create-release:
    needs: [version, lint, test]
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Create Release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ needs.version.outputs.version }}
        release_name: Version ${{ needs.version.outputs.version }}
        body: |
          Release version ${{ needs.version.outputs.version }}
          
          Changes in this version:
          - Enhanced SwiftUI integration
          - Improved Bluetooth state handling
          - Bug fixes and performance improvements
        draft: false
        prerelease: false
          
  deploy:
    needs: [version, create-release]
    runs-on: macos-latest
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Install Cocoapods
      run: gem install cocoapods
      
    - name: Deploy to Cocoapods
      env:
        COCOAPODS_TRUNK_TOKEN: ${{ secrets.COCOAPODS_TRUNK_TOKEN }}
      run: |
        echo "Deploying version ${{ needs.version.outputs.version }} to CocoaPods"
        pod trunk push --allow-warnings 